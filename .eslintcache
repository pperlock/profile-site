[{"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\index.js":"1","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\App.js":"2","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\reportWebVitals.js":"3","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Intro\\Intro.jsx":"4","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\MainPage\\MainPage.jsx":"5","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\Section\\Section.jsx":"6","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\Header\\Header.jsx":"7","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\PageTitle\\PageTitle.jsx":"8","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Skills\\Skills.jsx":"9","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\About\\About.jsx":"10","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Experience\\Experience.jsx":"11","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\Overlay\\Overlay.jsx":"12","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Projects\\Projects.jsx":"13","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Contact\\Contact.jsx":"14","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\TrailIcon\\TrailIcon.jsx":"15","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\BackPack\\BackPack.jsx":"16","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\SkillIcon\\SkillIcon.jsx":"17","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\AboutOverlay\\AboutOverlay.jsx":"18","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\ExperienceOverlay\\ExperienceOverlay.jsx":"19","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\SkillsOverlay\\SkillsOverlay.jsx":"20","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\Sparkles\\Sparkles.jsx":"21"},{"size":478,"mtime":1608645561512,"results":"22","hashOfConfig":"23"},{"size":1679,"mtime":1614799765370,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":3585,"mtime":1616413488409,"results":"26","hashOfConfig":"23"},{"size":3423,"mtime":1617028510571,"results":"27","hashOfConfig":"23"},{"size":2658,"mtime":1617028510541,"results":"28","hashOfConfig":"23"},{"size":3930,"mtime":1614860609928,"results":"29","hashOfConfig":"23"},{"size":931,"mtime":1617028510532,"results":"30","hashOfConfig":"23"},{"size":3391,"mtime":1617028510577,"results":"31","hashOfConfig":"23"},{"size":429,"mtime":1617028510558,"results":"32","hashOfConfig":"23"},{"size":4010,"mtime":1617028510564,"results":"33","hashOfConfig":"23"},{"size":2052,"mtime":1617028510525,"results":"34","hashOfConfig":"23"},{"size":5545,"mtime":1616877011249,"results":"35","hashOfConfig":"23"},{"size":1561,"mtime":1616357679093,"results":"36","hashOfConfig":"23"},{"size":2793,"mtime":1617028510548,"results":"37","hashOfConfig":"23"},{"size":938,"mtime":1616410807386,"results":"38","hashOfConfig":"23"},{"size":1093,"mtime":1616410761080,"results":"39","hashOfConfig":"23"},{"size":2969,"mtime":1617028510509,"results":"40","hashOfConfig":"23"},{"size":6605,"mtime":1614546657442,"results":"41","hashOfConfig":"23"},{"size":2027,"mtime":1616252880433,"results":"42","hashOfConfig":"23"},{"size":5053,"mtime":1616275179366,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"156mkfg",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\index.js",[],["96","97"],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\App.js",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\reportWebVitals.js",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Intro\\Intro.jsx",["98","99","100"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport Sparkles from '../../components/Sparkles/Sparkles';\r\n\r\n\r\nimport './Intro.scss';\r\n\r\nfunction Intro() {\r\n\r\n    //set state to determine if replay or skip controls are shown\r\n    const [displayReplay, setDisplayReplay] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const [gifSrc, setGifSrc] = useState(\"/videos/intro-video-noloop.gif?\"+new Date().getTime());\r\n\r\n    useEffect(() => {\r\n        setTimeout(()=>{setShowLoading(true);},1000);\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        // once the video 6s video is over replace the skip control with the replay\r\n        if(!isLoading){\r\n            setTimeout(()=>{setDisplayReplay(true);},6000);\r\n        }\r\n    },[isLoading]);\r\n\r\n    // reload the page if the replay button is selected\r\n    const replayVideo = () =>{\r\n       window.location.reload(true);\r\n    }\r\n\r\n    const playLoadedVideo = () =>{\r\n        // setTimeout(()=>{setIsLoading(false)},3000);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {(isLoading && showLoading) &&\r\n            <div className=\"intro__loading\">\r\n                <div className=\"intro__loading-logo\">\r\n                    <Sparkles>\r\n                        <Link to=\"/main\" className=\"logo-text\">\r\n                            <p className=\"logo__name\"> PATTI PERLOCK </p>\r\n                            <p className=\"logo__title\"> WEB DEVELOPER </p>\r\n                        </Link>   \r\n                    </Sparkles>\r\n                </div>\r\n                    <div className=\"intro__loading-container\">\r\n                        {/* <h1 className=\"intro__loading-text\"> Loading </h1> */}\r\n                        <img className=\"intro__loading-img\" src=\"/icons/loader.gif\"/>\r\n                    </div>\r\n            </div>\r\n        }\r\n\r\n        {/* Added about background image to intro to preload for rest of site */}\r\n        <main id=\"intro\" className={isLoading ? \"intro--off\" : \"intro\"} style={{backgroundImage: `url('/images/about-background.jpg')`}}> \r\n          \r\n            {/* render either the replay button or the skip control based on state */}\r\n            {!isLoading && (displayReplay ? <img onClick={replayVideo} className=\"intro__replay\" src=\"/icons/replay-icon.svg\" alt=\"replay\"/> : <Link to=\"/main\"><p className=\"intro__skip\"> Skip Intro </p></Link>)}\r\n            \r\n            {!isLoading && <div className=\"logo\">\r\n                <Link to=\"/main\" className=\"logo-text\">\r\n                    <p className=\"logo__name\"> PATTI PERLOCK </p>\r\n                    <p className=\"logo__title\"> WEB DEVELOPER </p>\r\n                </Link>\r\n\r\n                <div className=\"logo__filter\">\r\n                    <img className=\"logo__image\" src='/icons/silhouette3.png' alt=\"mountain-logo\" />\r\n                </div>\r\n            </div>}\r\n\r\n            {/* if the replay button is showing then add the abilit to enter the site */}\r\n            {(!isLoading && displayReplay) && <Link  to=\"/main\" className=\"enter\">ENTER</Link>}\r\n\r\n            {window.innerWidth >= 768 && <video className=\"video\" autoPlay muted onCanPlayThrough = {playLoadedVideo}>\r\n                <source src=\"/videos/Final-50mm.mp4\" type=\"video/mp4\"/>Your browser does not support the video tag.\r\n            </video>}\r\n\r\n            {window.innerWidth < 768 && <img className='video-gif' src={gifSrc} onLoad = {playLoadedVideo}/>}\r\n        </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Intro\r\n","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\MainPage\\MainPage.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\Section\\Section.jsx",["101","102","103","104","105"],"import React, {useState, useRef} from 'react';\r\nimport \"./Section.scss\";\r\n\r\nimport Overlay from '../../components/Overlay/Overlay';\r\nimport PageTitle from '../../components/PageTitle/PageTitle';\r\nimport About from '../../pages/About/About';\r\nimport Skills from '../../pages/Skills/Skills';\r\nimport Experience from '../../pages/Experience/Experience';\r\nimport Projects from '../../pages/Projects/Projects';\r\nimport Contact from '../../pages/Contact/Contact';\r\nimport Sparkles from '../Sparkles/Sparkles';\r\n\r\n\r\n/**\r\n * Props Passed in from MainPage\r\n * @param {Object} section\r\n * @param {Boolean} reachedBottom\r\n */\r\n\r\nfunction Section({section, reachedBottom, toggleOverlay, showOverlay}) {\r\n    \r\n    const {name, background, scrollAnimation, overlay} = section;\r\n\r\n    return (\r\n        <section id={name} className={`section ${name}`} style={{backgroundImage: `url(${background})`}}>\r\n            \r\n            {name===\"experience\" && <div className=\"transition2\"></div>}\r\n            \r\n            <PageTitle section={section}/>\r\n            \r\n            {/* Conditionally render the correct section component based on the name of the section */}\r\n            <div className= {`${name}__content`} data-aos={scrollAnimation.animation} data-aos-anchor={scrollAnimation.anchor} data-aos-anchor-placement={scrollAnimation.anchorPlacement} data-aos-duration={scrollAnimation.speed}>\r\n                {name===\"about\" && <About toggleOverlay={toggleOverlay}/>}\r\n                {name===\"skills\" && <Skills showOverlay={showOverlay} toggleOverlay={toggleOverlay}/>}\r\n                {name===\"experience\" && <Experience showOverlay={showOverlay}/>}\r\n                {name===\"projects\" && <Projects/>} \r\n                {name===\"contact\" && <Contact reachedBottom={reachedBottom}/>}  \r\n                {name===\"projects\" &&  <img className=\"projects__mountain\" src=\"/images/mountain4.png\" alt=\"top of mountain\" data-aos-anchor=\".projects\" data-aos=\"fade-left\" data-aos-offset=\"500\" data-aos-duration=\"3000\"/>}    \r\n            </div>\r\n\r\n            {(name !== \"projects\" && name !== \"contact\") &&\r\n                <div className={`trail-marker__container--${name}`} onClick={()=>toggleOverlay(name)}>\r\n                    <div className={`trail-marker--${name}`}>\r\n                        <img className={`trail-marker__image--${name}`} src= \"/icons/trail-marker-3.png\"/>\r\n                        <p className={`trail-marker__text-${name}--top`}> {`${name[0].toUpperCase() + name.slice(1)}`}</p>\r\n                        <p className={\"trail-marker__text--bottom\"}>Trail</p>\r\n                        <Sparkles><div className=\"trail-marker__base\"></div></Sparkles>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n          \r\n            {/* apply the appropriate \"transition\" divs to make a smooth color transition between sections */}\r\n            {name===\"about\" && <div className=\"transition1\"></div>} \r\n            {name===\"experience\" && <div className=\"transition3\"></div>}\r\n            {name===\"projects\" && <div className=\"transition4\"></div>}\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section\r\n","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\PageTitle\\PageTitle.jsx",["106"],"import React from 'react'\r\n\r\nimport './PageTitle.scss';\r\n\r\nimport Sparkles from '../Sparkles/Sparkles';\r\n/**\r\n * Props Passed in from Section\r\n * @param {Object} section\r\n * @param {Function} toggleOverlay - modifies state in the section component to hide/show overlay\r\n * @param {Boolean} showOverlay\r\n */\r\n\r\nfunction PageTitle({section, showOverlay}) {\r\n\r\n    return (\r\n        <div className={showOverlay ? \"title title-hide\" : \"title\"}>\r\n            <h1 className={section.name !==\"contact\" ? \"title-text\" : \"title-text title-text--contact\"}>{section.title}</h1>\r\n         </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageTitle\r\n\r\n","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Skills\\Skills.jsx",["107"],"import React, {useState, createContext} from 'react';\r\n\r\nimport './Skills.scss';\r\n\r\nimport SkillIcon from '../../components/SkillIcon/SkillIcon';\r\nimport BackPack from '../../components/BackPack/BackPack';\r\nimport Sparkles from '../../components/Sparkles/Sparkles';\r\n\r\nexport const CardContext = createContext({\r\n    markAsDone:null\r\n})\r\n\r\n/**\r\n * Props Passed in from Section\r\n * @param {Object} match\r\n * @param {Boolean} showOverlay\r\n */\r\n\r\nconst Skills = ({match, showOverlay, toggleOverlay}) => {\r\n    \r\n    const [skillList, setSkillList] = useState([\r\n        {id: \"0\", status:\"out\", name:'skills__html-css', image:'/icons/html5-css3.png', title:\"\", alt:\"html 5\", animation:\"fade-up\"},\r\n        {id: \"1\", status:\"out\", name:'skills__js', image:'/icons/js-icon2.png', title:\"\", alt:\"javascript\",  animation:\"fade-left\"},\r\n        {id: \"2\", status:\"out\", name:'skills__node', image:'/icons/nodejs-icon.svg', title:\"\", alt:\"nodejs\",  animation:\"fade-down\"},\r\n        {id: \"3\", status:\"out\", name:'skills__react', image:'/icons/react-icon.png', title:\"\", alt:\"react\",  animation:\"fade-right\"},\r\n        {id: \"4\", status:\"out\", name:'skills__sass', image:'/icons/sass-icon.png', title:\"\", alt:\"sass\",  animation:\"fade-up-left\"},\r\n        {id: \"5\", status:\"out\", name:'skills__axios', image:'/icons/axios-icon.png', title:\"\", alt:\"axios\",  animation:\"fade-up-right\"},\r\n        {id: \"6\", status:\"out\", name:'skills__git', image:'/icons/git-icon.png', title:\"\", alt:\"git\",  animation:\"fade-down-left\"}, \r\n        {id: \"7\", status:\"out\", name:'skills__databases', image:'/icons/databases.png', title:\"\", alt:\"sql\",  animation:\"fade-down-right\"},   \r\n    ]);\r\n\r\n    //changes the status of the skill to \"in\" when it is dropped into the backpack\r\n    const markAsDone = id => {\r\n        const skill = skillList.filter((skill,i)=> skill.id === id);\r\n        skill[0].status=\"in\";\r\n        setSkillList(skillList.filter((skill,i) => skill.id !== id).concat(skill[0]));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <CardContext.Provider value={{markAsDone}}>\r\n            {/* Show the appropriate text when the bag is packed */}\r\n            {(skillList.filter(skill => skill.status === \"out\").length === 0 && !showOverlay) && <a className=\"skills__packed\" href=\"#experience\"> All Packed - Let's Go!</a>}\r\n                \r\n            {/* Show the appropriate text when no items are in bag */}\r\n            {(skillList.filter(skill => skill.status === \"out\").length === 8 && !showOverlay) && \r\n                <div className=\"skills__packed-start\">\r\n                    <p> Pack Your Bag </p>\r\n                    <p className=\"skills__packed-start--dnd\"> Drag and Drop </p>\r\n                </div>\r\n            }\r\n            \r\n            {/* {(skillList.filter(skill => skill.status === \"out\").length === 8 && !showOverlay) && <img className=\"skills__hand\" src=\"/icons/hand.png\" alt=\"hand dropping item\"/>} */}\r\n            \r\n            {/* render the backpack and skills icons*/}\r\n            <div className=\"skills__main\">\r\n                <BackPack/>\r\n                {skillList.filter((skill,i)=> skill.status === \"out\").map((skill,index) => \r\n                    <SkillIcon  \r\n                        key={skill.id} \r\n                        id={skill.id} \r\n                        skill={skill} \r\n                        type=\"skills\"\r\n                    />)}\r\n            </div>\r\n\r\n        </CardContext.Provider>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default Skills;\r\n\r\n","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\About\\About.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Experience\\Experience.jsx",["108","109","110"],"import React, {useState, useEffect} from 'react'\r\nimport './Experience.scss';\r\n\r\nimport TrailIcon from '../../components/TrailIcon/TrailIcon';\r\nimport TrailModal from '../../components/TrailModal/TrailModal';\r\n\r\n\r\nfunction Experience (){\r\n    const mapIcons=[\r\n        {id: 0, name:'head', image:'/icons/trail-head.svg', alt:\"trail head icon\", title:'Trail Head', modal:\"top\", \r\n        contentTitle: \"It All Started When ...\",\r\n        content: \"I was introduced to coding in highschool which ignited the spark and started me on a journey into computer science.\"},\r\n        {id: 1, name:'hiker', image:'/icons/hiking-solid.svg', alt:\"hiker icon\", title:'Computer Science & Geophysics', modal:\"top\", \r\n        contentTitle: \"How it Shaped Me ...\",\r\n        content: \"My time in science and research studying geophysics taught me that I wanted to move at a faster pace in a malleable, exciting field.\",\r\n        experience:[\r\n            {date: \"2005-2010\", background:\"/icons/uwo.png\", place: \"University of Western Ontario\", position: \"MSc.Geophysics\", focus: \"programming & statistical physics\", thesis: \"Imaging Faults in 3D Using Pattern Informatics\"},\r\n            {date: \"2000-2005\", background:\"/icons/uwo.png\", place: \"University of Western Ontario\", position: \"BSc.Geophysics\", focus: \"programming & optimization algorithms\", thesis: \"Modeling of the July 1998 Northridge Aftershock Using a Linear Inversion and Genetic Algorithm\"}\r\n        ]},\r\n        {id: 2, name:'detour', image:'/icons/map-signs-solid.svg', alt:\"detour icon\", title:'Detour', \r\n        contentTitle: \"I Detoured From my Path...\",\r\n        content: \"When my passion for the outdoors and animals lead me to explore a career as a Dog Trainer.\", modal:\"middle\",},\r\n        \r\n        {id: 3, name:'db', image:'/icons/database.svg', alt:\"database icon\", title:'Database Administration', modal:\"bottom\", \r\n        contentTitle: \"How it Shaped Me ...\",\r\n        content: \"As a Database Administrator I found myself constantly reaching for ways to learn new skills and searching for projects that allowed me to use my object-oriented programming knowledge and logical thinking skills.\",\r\n        experience:[\r\n            {date: \"2017-2020\", background:\"/icons/klg.png\", place: \"Kirkland Lake Gold\", position: \"Senior Database Administrator\"},\r\n            {date: \"2015-2017\", background:\"/icons/sas.png\", place: \"St. Andrew's Goldfields\", position: \"Database Administrator\"},\r\n        ]},\r\n        {id: 4, name:'dog', image:'/icons/dog-training.svg', alt:\"dog training icon\", title:'Dog Training', modal:\"top\", \r\n        contentTitle: \"How it Shaped Me ...\",\r\n        content: \"I loved the impact I was making on other people's lives as a dog trainer but ultimately it left me lonely and mentally unstimulated, longing for a team environment.\",\r\n        experience:[\r\n            {date: \"2010-2015\", background:\"/icons/dogs-north.png\", place: \"Dog's North\", position: \"Owner, Lead Trainer\"},\r\n        ]},\r\n        {id: 5, name:'end', image:'/icons/end-of-trail.png', alt:\"end of trail icon\", title:'Web Development', modal:\"bottom\", \r\n        contentTitle: \"Here you Find Me ...\",\r\n        content: \"In an exciting, fast-paced, changing field that pushes my imagination to its limits, and challenges my brain daily through constant learning and problem solving.\",\r\n        experience:[\r\n            {id:'0', date: \"Present\", background:\"/icons/brainstation3.png\", place: \"BrainStation\", position:\"Teaching Assistant\"},\r\n            {id:'1', date: \"2020-2021\", background:\"/icons/brainstation3.png\", place: \"BrainStation\", position: \"Student: Full Stack Development\"},\r\n        ]}\r\n    ];\r\n\r\n           \r\n    return (\r\n        <>\r\n            {/* render the trail image along with each icon using the declared mapIcons array */}\r\n            <img className=\"trail__image\" src='/images/trail-path2.png' alt=\"trail\" />\r\n            {mapIcons.map(icon =><TrailIcon key={icon.id} icon={icon}/>)}                 \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Experience","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\Overlay\\Overlay.jsx",["111","112","113","114"],"import React from 'react';\r\nimport './Overlay.scss';\r\n\r\nimport ExperienceOverlay from '../../components/ExperienceOverlay/ExperienceOverlay';\r\nimport AboutOverlay from '../../components/AboutOverlay/AboutOverlay';\r\nimport SkillsOverlay from '../../components/SkillsOverlay/SkillsOverlay';\r\n\r\n/**\r\n * Props Passed in from Section\r\n * @param {String} section\r\n * @param {Function} toggleOverlay - modifies state in the section component to hide/show overlay\r\n * @param {Boolean} showOverlay\r\n */\r\n\r\nfunction Overlay({section, showOverlay, toggleOverlay, overlayToShow}) {\r\n\r\n        return (\r\n            <div id={section +\"__white-overlay\"}\r\n                className={!showOverlay  ? \"white-overlay--off full\" : \r\n                // section === \"skills\" ? `white-overlay__skills--on white-overlay--skills full` : `white-overlay__${overlayToShow}--on full`}\r\n                section !== overlayToShow ? `white-overlay__skills--off` : `white-overlay__${overlayToShow}--on full`}\r\n                style={section !== \"skills\" ? {backgroundImage:\"url('/images/white1.jpg')\"} : {backgroundImage:\"url('')\"}}>\r\n                \r\n                \r\n                {/* Conditionally render the appropiate overlay based on the secion name */}\r\n                <div id={section + \"__full-text\"} className={!showOverlay ? \"full-text full-text-off\" : \"full-text full-text--on\"} > \r\n                    {(section ===\"experience\" && overlayToShow === \"experience\") &&  <ExperienceOverlay showOverlay={showOverlay}/>}\r\n                    {(section ===\"about\"  && overlayToShow === \"about\") && <AboutOverlay showOverlay={showOverlay}/>}\r\n                    {(section ===\"skills\"  && overlayToShow === \"skills\") &&  <SkillsOverlay showOverlay={showOverlay}/>}\r\n                </div>\r\n            \r\n                {showOverlay && \r\n\r\n                    <img className=\"full-text__close\" onClick={()=>toggleOverlay(section)} src=\"/icons/down-triangle.svg\"/>\r\n\r\n                }\r\n            </div> \r\n            \r\n        )\r\n}\r\n\r\nexport default Overlay\r\n\r\n\r\n                   {/* <button className=\"overlay-arrow-wrapper\">\r\n                        {/* Skills has a black background so give the arrow a different class to make it light */}\r\n                        {/* <div className={section !== \"skills\" ? \"overlay-arrow\" : \"overlay-arrow overlay-arrow-skills\"} onClick={()=>toggleOverlay(section)}></div> */}\r\n                    {/* </button> */}","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Projects\\Projects.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\pages\\Contact\\Contact.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\TrailIcon\\TrailIcon.jsx",["115","116"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport './TrailIcon.scss';\r\n\r\nimport TrailModal from '../TrailModal/TrailModal';\r\n\r\n/**\r\n * Props Passed in from Experience\r\n * @param {Object} icon\r\n*/\r\n\r\nfunction TrailIcon({icon}) {\r\n\r\n    const iconRef = useRef(null);\r\n    \r\n    //use state to determine if the modal is visibile or not\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalPosition, setModalPosition] = useState({top:0, left:0});\r\n    const [currentIcon, setCurrentIcon] = useState();\r\n    \r\n    const toggleModal = (event, action, iconName) => {\r\n        setCurrentIcon(iconName);\r\n        console.log(action);\r\n        setShowModal(action);\r\n        console.log(\"scroll\", window.scrollY);\r\n        console.log(\"page\", event.pageY);\r\n        console.log(\"diff\", event.pageY - (window.scrollY));\r\n\r\n        \r\n        \r\n        // const headerHeight =  window.innerWidth < 768 ? 179 : 140;\r\n        // const contentTop = window.innerWidth < 768 ? 1938 : ((window.innerWidth >= 768  && window.innerWidth < 1280) ? 2574: 2900);\r\n        \r\n        const devices = [\r\n            {minWidth:320, maxWidth:768, headerHeight:140, contentTop:1938, topLeft:0, middleLeft:0, bottomLeft:0, pageYMiddle:0, scrollYMiddle:0, scrollYBottom: 3000, sectionOffset:500},\r\n            {minWidth:768, maxWidth:1280, headerHeight: 179, contentTop:2556, topLeft:35, middleLeft:-5, bottomLeft:35, pageYMiddle:0, scrollYMiddle:0, scrollYBottom: 0, sectionOffset:500},\r\n            {minWidth:1280, maxWidth:1700, headerHeight:179, contentTop: 2900, topLeft:35, middleLeft:-5, bottomLeft:35, pageYMiddle:3217, scrollYMiddle:2800, scrollYBottom: 3000, sectionOffset:300},\r\n            {minWidth:1700, maxWidth:3000, headerHeight: 179, contentTop:2900, topLeft:35, middleLeft:-15, bottomLeft:35, pageYMiddle: 3301, scrollYMiddle: 2991, scrollYBottom: 3000, sectionOffset:320}\r\n        ]\r\n        \r\n        //Still to find\r\n        //top/middle/bottom breaks for mobile and tablet desktop\r\n        //what is 320?\r\n\r\n        const modalPlacement = devices.find(device => window.innerWidth >= device.minWidth && window.innerWidth < device.maxWidth)\r\n        let modalTop = ((window.scrollY + modalPlacement.headerHeight) - modalPlacement.contentTop) + (window.innerHeight - modalPlacement.sectionOffset)/2;\r\n        \r\n        console.log(window.innerHeight);\r\n         \r\n        if(event.pageY < modalPlacement.pageYMiddle){\r\n            console.log(modalTop);\r\n            modalTop = modalTop <= 0 ? 0 : modalTop;\r\n            setModalPosition({top:modalTop, left:modalPlacement.topLeft});\r\n        }else if(event.pageY >= modalPlacement.pageYMiddle  && window.scrollY < modalPlacement.scrollYMiddle){\r\n            setModalPosition({top:modalTop, left:modalPlacement.middleLeft});\r\n        }else if(event.pageY >= modalPlacement.pageYMiddle  && window.scrollY >= modalPlacement.scrollYBottom){\r\n            setModalPosition({top:modalTop, left:modalPlacement.bottomLeft});\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const modal = document.querySelector(`.trail__modal-${icon.name}`);\r\n        console.log(modal);\r\n        if(showModal){\r\n            modal.style.top = `${modalPosition.top}px`;\r\n            modal.style.left = `${modalPosition.left}vw`;\r\n        }\r\n\r\n    }, [modalPosition]);\r\n\r\n    return(\r\n        <>\r\n            <div ref={iconRef} className={`trail__div trail__div-${icon.name}`} >\r\n                {/* <img onMouseEnter={(event)=>toggleModal(event,true, icon.name)} onMouseLeave={(event)=>{toggleModal(event,false)}} className= \"trail-icon\" id={icon.id} src={icon.image} alt={icon.alt} /> */}\r\n                <img onClick={(event)=>toggleModal(event,true, icon.name)} className= \"trail-icon\" id={icon.id} src={icon.image} alt={icon.alt} />\r\n                <p className=\"trail-title\">{icon.title}</p>\r\n            </div>\r\n            {showModal && <TrailModal icon={icon} onCloseRequest={() => setShowModal(false)}/>}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default TrailIcon\r\n","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\BackPack\\BackPack.jsx",["117","118"],"import React, {useContext} from 'react'\r\nimport {useDrop} from 'react-dnd';\r\nimport {CardContext} from '../../pages/Skills/Skills';\r\nimport \"aos/dist/aos.css\";\r\n\r\n\r\nimport './BackPack.scss';\r\n\r\n/**\r\n* Rendered from Skills\r\n*/\r\n\r\nconst ItemTypes = {\r\n    CARD:'card',\r\n};\r\n\r\nconst BackPack = () => {\r\n\r\n    const {markAsDone} = useContext(CardContext);\r\n\r\n    const[{isOver}, drop] = useDrop({\r\n        accept: ItemTypes.CARD,\r\n        drop: (item, monitor)=> markAsDone(item.id),\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver(),\r\n        }),\r\n    });\r\n\r\n    return (\r\n        <div ref={drop} className=\"backpack\">\r\n            <img data-aos-anchor=\".skills\" data-aos=\"flip-left\" data-aos-offset=\"10\" data-aos-duration=\"3000\" data-aos-anchor-placement=\"top-center\" data-aos-duration=\"1500\" className=\"backpack__image\" src=\"/images/backpack.png\" alt=\"backpack\"/>\r\n        </div> \r\n    )\r\n}\r\nexport default BackPack\r\n","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\SkillIcon\\SkillIcon.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\AboutOverlay\\AboutOverlay.jsx",["119","120"],"import React, {useRef, useEffect} from 'react';\r\nimport './AboutOverlay.scss';\r\n\r\n/**\r\n * Props Passed in from Overlay\r\n * @param {Boolean} showOverlay\r\n */\r\n\r\nfunction AboutOverlay({showOverlay}) {\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"about__overlay\"> \r\n            <div className=\"about__overlay-who\">\r\n                <h2 className={showOverlay ? \"about__overlay-title animate-type\" : \"about__overlay-title\"}>Who is She?</h2>\r\n                <p className=\"about__overlay-text\">I am a newly minted <span className=\"about__overlay-text--emphasize\"> Full Stack Web Developer </span> looking to make her mark in the <span className=\"about__overlay-text--emphasize\"> Web Development </span> world.  \r\n                I proudly embrace my diverse background and the lessons I have learned from it.  My path may seem disjointed to some, but it has created the <span className=\"about__overlay-text--emphasize\">adaptable, multi-talented, well-rounded individual </span> I am today.</p>\r\n            </div>\r\n            \r\n            <img className=\"about__overlay-image\"src=\"/images/climbing-patti.jpg\" alt=\"patti\"/>\r\n\r\n            <div className=\"about__overlay-what\">\r\n                <h2 className={showOverlay ? \"about__overlay-title animate-type\" : \"about__overlay-title\"}>What Can You Expect From Her?</h2>    \r\n                <p className=\"about__overlay-text\">My work style is extremely <span className=\"about__overlay-text--emphasize\">flexible</span>. Owing to my <span className=\"about__overlay-text--emphasize\">organization skills </span> and <span className=\"about__overlay-text--emphasize\">efficiency</span>, I have a track record of successfully juggling multiple projects at once on tight deadlines.  \r\n                Left to my own devices, I have the ability to push myself to produce <span className=\"about__overlay-text--emphasize\"> top quality work with limited direction</span>.  \r\n                At the same time, <span className=\"about__overlay-text--emphasize\">I play well with others </span> in a collaborative <span className=\"about__overlay-text--emphasize\">agile team </span>environment where I can take the reigns and <span className=\"about__overlay-text--emphasize\">lead</span> or pull back and have another person lead the way.  \r\n                My process from start to finish is very <span className=\"about__overlay-text--emphasize\">detailed-oriented</span> and <span className=\"about__overlay-text--emphasize\">quality driven </span> with a focus on <span className=\"about__overlay-text--emphasize\">user experience</span> as well as <span className=\"about__overlay-text--emphasize\">code quality and reusability</span>.  \r\n                Using the two words <span className=\"about__overlay-text--emphasize\">“What” </span> and <span className=\"about__overlay-text--emphasize\">“if”</span> are my favourite way to start a project, a sentence and a day.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutOverlay\r\n","C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\ExperienceOverlay\\ExperienceOverlay.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\SkillsOverlay\\SkillsOverlay.jsx",[],"C:\\Users\\patti\\Desktop\\WebDev\\profile-site\\profile-site\\src\\components\\Sparkles\\Sparkles.jsx",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":14,"column":20,"nodeType":"127","messageId":"128","endLine":14,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":51,"column":25,"nodeType":"131","endLine":51,"endColumn":86},{"ruleId":"129","severity":1,"message":"130","line":80,"column":41,"nodeType":"131","endLine":80,"endColumn":109},{"ruleId":"125","severity":1,"message":"132","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"133","line":1,"column":26,"nodeType":"127","messageId":"128","endLine":1,"endColumn":32},{"ruleId":"125","severity":1,"message":"134","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":15},{"ruleId":"125","severity":1,"message":"135","line":22,"column":47,"nodeType":"127","messageId":"128","endLine":22,"endColumn":54},{"ruleId":"129","severity":1,"message":"130","line":44,"column":25,"nodeType":"131","endLine":44,"endColumn":107},{"ruleId":"125","severity":1,"message":"136","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":16},{"ruleId":"125","severity":1,"message":"136","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":16},{"ruleId":"125","severity":1,"message":"132","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"137","line":1,"column":26,"nodeType":"127","messageId":"128","endLine":1,"endColumn":35},{"ruleId":"125","severity":1,"message":"138","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":34,"column":21,"nodeType":"131","endLine":34,"endColumn":124},{"ruleId":"139","severity":1,"message":"140","line":45,"column":20,"nodeType":"141","messageId":"142","endLine":46,"endColumn":115},{"ruleId":"139","severity":1,"message":"140","line":47,"column":25,"nodeType":"141","messageId":"142","endLine":47,"endColumn":171},{"ruleId":"139","severity":1,"message":"140","line":48,"column":21,"nodeType":"141","messageId":"142","endLine":48,"endColumn":38},{"ruleId":"125","severity":1,"message":"143","line":18,"column":12,"nodeType":"127","messageId":"128","endLine":18,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":69,"column":8,"nodeType":"146","endLine":69,"endColumn":23,"suggestions":"147"},{"ruleId":"125","severity":1,"message":"148","line":21,"column":12,"nodeType":"127","messageId":"128","endLine":21,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":31,"column":150,"nodeType":"151","endLine":31,"endColumn":174},{"ruleId":"125","severity":1,"message":"133","line":1,"column":16,"nodeType":"127","messageId":"128","endLine":1,"endColumn":22},{"ruleId":"125","severity":1,"message":"137","line":1,"column":24,"nodeType":"127","messageId":"128","endLine":1,"endColumn":33},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'setGifSrc' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useRef' is defined but never used.","'Overlay' is defined but never used.","'overlay' is assigned a value but never used.","'Sparkles' is defined but never used.","'useEffect' is defined but never used.","'TrailModal' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'currentIcon' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'icon.name' and 'showModal'. Either include them or remove the dependency array.","ArrayExpression",["154"],"'isOver' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [icon.name, modalPosition, showModal]",{"range":"157","text":"158"},[3299,3314],"[icon.name, modalPosition, showModal]"]